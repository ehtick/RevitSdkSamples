<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>Lab1_2_CommandArguments Class</title><link rel="stylesheet" type="text/css" href="../styles/presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/Dropdown.js"> </script><script type="text/javascript" src="../scripts/script_manifold.js"> </script><script type="text/javascript" src="../scripts/script_feedBack.js"> </script><script type="text/javascript" src="../scripts/CheckboxMenu.js"> </script><script type="text/javascript" src="../scripts/CommonUtilities.js"> </script><meta name="container" content="Labs" /><meta name="file" content="fb2c5a55-f61c-b83c-fae4-694c47f0c821" /><meta name="guid" content="fb2c5a55-f61c-b83c-fae4-694c47f0c821" /><xml><MSHelp:Attr Name="AssetID" Value="T:Labs.Lab1_2_CommandArguments" /><MSHelp:TOCTitle Title="Lab1_2_CommandArguments Class" /><MSHelp:RLTitle Title="Lab1_2_CommandArguments Class (Labs)" /><MSHelp:Keyword Index="A" Term="T:Labs.Lab1_2_CommandArguments" /><MSHelp:Keyword Index="A" Term="frlrfLabsLab1_2_CommandArgumentsClassTopic" /><MSHelp:Keyword Index="K" Term="Lab1_2_CommandArguments class" /><MSHelp:Keyword Index="K" Term="Labs.Lab1_2_CommandArguments class" /><MSHelp:Keyword Index="K" Term="Lab1_2_CommandArguments class, about Lab1_2_CommandArguments class" /><MSHelp:Keyword Index="F" Term="Lab1_2_CommandArguments" /><MSHelp:Keyword Index="F" Term="Labs.Lab1_2_CommandArguments" /><MSHelp:Attr Name="HelpPriority" Value="2" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="labs.dll" /><MSHelp:Attr Name="APIName" Value="Labs.Lab1_2_CommandArguments" /><MSHelp:Attr Name="DevLang" Value="CSharp" /><MSHelp:Attr Name="DevLang" Value="VB" /><MSHelp:Attr Name="DevLang" Value="C++" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="Abstract" Value="In this lab, we explore the contents and usage of the Execute method's command data input argument and the meaning of the result return code and the message and element set return arguments. The details are discussed in the developer guide, ..." /><MSHelp:Attr Name="AssemblyVersion" Value="3.0.0.1" /></xml><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"></script></head><body><input type="hidden" id="userDataCache" class="userDataStyle" /><input type="hidden" id="hiddenScrollOffset" /><img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" title="Collapse image" /><img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" title="Expand Image" /><img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" /><img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" /><img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" /><img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" /><img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" title="Copy image" /><img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" title="CopyHover image" /><div id="header"><table id="topTable" cellspacing="0" cellpadding="0"><tr><td><span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0"><img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">Collapse All</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">Expand All</label> </span><span>    </span><span id="devlangsDropdown" class="filter" tabindex="0"><img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: All </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Multiple </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: C# </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual Basic </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual C++ </nobr></label></span></td></tr></table><div id="devlangsMenu"><input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="CSharpCheckbox">C#</label><br /><input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label><br /><input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label><br /></div><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit API Introduction Labs</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">Lab1_2_CommandArguments Class</span></td></tr><tr id="headerTableRow3"><td align="left"><a href="2e57467a-af71-1c93-0159-4dfd69a30ce1.htm">Members</a>  <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a>  
  <span id="headfeedbackarea" class="feedbackhead">
      <a href="javascript:SubmitFeedback('','Revit API Introduction Labs','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">
        
        Send Feedback
      </a>
	</span>
</td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" /><span style="color: DarkGray"> </span><div class="summary">
 In this lab, we explore the contents and usage of the Execute
 method's command data input argument and the meaning of the result
 return code and the message and element set return arguments.
 The details are discussed in the developer guide,
 chapter 3.2, External Commands.
 <p>
      Implement a new external command implementation class named
      Lab1_2_CommandArguments and its Execute method analogously to the
      class you implemented in the previous lab.
    </p><p>
      The first argument to the Execute method is the command data
      object which is used to access the application object, from it the
      current view and document, and from it in turn all or the currently
      selected elements.
    </p><p>
      Let's first report some data about the current application,
      document and view. Add something like the following to the Execute
      function body. We make use of the LabUtils InfoMsg method, which
      is provided in the Revit API Introduction labs source code and
      provides various wrappers for the Revit task dialogue that
      we used in Lab 1-1:
    </p><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>C#</div><div class="code"><pre><span class="highlight-comment">// </span>
<span class="highlight-comment">// access application, document, and current view:</span>
<span class="highlight-comment">// </span>
UIApplication uiapp = commandData.Application;
Application app = uiapp.Application;
UIDocument uidoc = uiapp.ActiveUIDocument;
Document doc = uidoc.Document;
View view = commandData.View;
LanguageType lt = app.Language;
ProductType pt = app.Product;
<span class="highlight-keyword">string</span> s = <span class="highlight-literal">"Application = "</span> + app.VersionName
  + <span class="highlight-literal">"\r\nLanguage = "</span> + lt.ToString()
  + <span class="highlight-literal">"\r\nProduct = "</span> + pt.ToString()
  + <span class="highlight-literal">"\r\nVersion = "</span> + app.VersionNumber
  + <span class="highlight-literal">"\r\nDocument path = "</span> + doc.PathName <span class="highlight-comment">// empty if not yet saved</span>
  + <span class="highlight-literal">"\r\nDocument title = "</span> + doc.Title
  + <span class="highlight-literal">"\r\nView name = "</span> + view.Name;
LabUtils.InfoMsg( s );</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>VB.NET</div><div class="code"><pre><span class="highlight-comment">'</span>
<span class="highlight-comment">' access application, document, and current view:</span>
<span class="highlight-comment">'</span>
<span class="highlight-keyword">Dim</span> uiapp <span class="highlight-keyword">As</span> UIApplication = commandData.Application
<span class="highlight-keyword">Dim</span> app <span class="highlight-keyword">As</span> Application = uiapp.Application
<span class="highlight-keyword">Dim</span> uidoc <span class="highlight-keyword">As</span> UIDocument = uiapp.ActiveUIDocument
<span class="highlight-keyword">Dim</span> doc <span class="highlight-keyword">As</span> Document = uidoc.Document
<span class="highlight-keyword">Dim</span> view <span class="highlight-keyword">As</span> View = commandData.View
<span class="highlight-keyword">Dim</span> lt <span class="highlight-keyword">As</span> LanguageType = app.Language
<span class="highlight-keyword">Dim</span> pt <span class="highlight-keyword">As</span> ProductType = app.Product
<span class="highlight-keyword">Dim</span> s <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-literal">"Application = "</span> + app.VersionName _
    + vbCrLf + <span class="highlight-literal">"Language = "</span> + lt.ToString() _
    + vbCrLf + <span class="highlight-literal">"Product = "</span> + pt.ToString() _
    + vbCrLf + <span class="highlight-literal">"Version = "</span> + app.VersionNumber _
    + vbCrLf + <span class="highlight-literal">"Document path = "</span> + doc.PathName _
    + vbCrLf + <span class="highlight-literal">"Document title = "</span> + doc.Title _
    + vbCrLf + <span class="highlight-literal">"View name = "</span> + view.Name
LabUtils.InfoMsg(s)</pre></div></span><p>
      We can use the System.Windows.Forms MessageBox.Show() method
      to display meassages to users, or the Revit task dialogue like in
      Lab 1-1. Since it is cumbersome to add an additional argument for
      the caption each time we call it, we implement some message box
      helper methods in a separate class LabUtils and call thos instead.
    </p><p>
      To list all the currently selected elements, we can use the
      Selection property on the UIDocument object. This property further
      exposes an Elements property which returns an element set containing
      the selected elements. This provided access to the predefined element
      selection set. We use another LabUtils task dialogue wrapper which
      populates the main instruction with a message and the contents with
      a list of strings:
    </p><span id="cbc_3" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>C#</div><div class="code"><pre><span class="highlight-comment">// </span>
<span class="highlight-comment">// list the current selection set:</span>
<span class="highlight-comment">// </span>
Selection sel = uidoc.Selection;
List&lt;<span class="highlight-keyword">string</span>&gt; a = <span class="highlight-keyword">new</span> List&lt;<span class="highlight-keyword">string</span>&gt;();
<span class="highlight-keyword">foreach</span>( Element e <span class="highlight-keyword">in</span> sel.Elements )
{
  <span class="highlight-keyword">string</span> name = ( <span class="highlight-keyword">null</span> == e.Category ) ? e.GetType().Name : e.Category.Name;
  a.Add( name + <span class="highlight-literal">" Id="</span> + e.Id.IntegerValue.ToString() );
}
LabUtils.InfoMsg( <span class="highlight-literal">"There are {0} element{1} in the selection set{2}"</span>, a );</pre></div></span><span id="cbc_4" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>VB.NET</div><div class="code"><pre><span class="highlight-comment">'</span>
<span class="highlight-comment">' list the current selection set:</span>
<span class="highlight-comment">'</span>
<span class="highlight-keyword">Dim</span> sel <span class="highlight-keyword">As</span> Selection = uidoc.Selection

s = <span class="highlight-literal">"There are "</span> + sel.Elements.Size.ToString() + <span class="highlight-literal">" elements in the selection:"</span>

<span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> elem <span class="highlight-keyword">As</span> Element <span class="highlight-keyword">In</span> sel.Elements
    s += vbCrLf + <span class="highlight-literal">"  "</span> + elem.Category.Name
    s += <span class="highlight-literal">" Id="</span> + elem.Id.IntegerValue.ToString()
<span class="highlight-keyword">Next</span>

LabUtils.InfoMsg(s)</pre></div></span><p>
      The last two arguments to the Execute method are return arguments
      and used only when returning a Cancelled or Failed status to Revit, so
      that a meaningful message can be displayed in the standard user interface
      dialogue box and the relevant elements can be highlighted on the graphics
      screen. To simulate an error condition and display the result of populating
      these, add the following code:
    </p><span id="cbc_5" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>C#</div><div class="code"><pre><span class="highlight-comment">// </span>
<span class="highlight-comment">// we pretend that something is wrong with the first</span>
<span class="highlight-comment">// element in the selection. pass a message back to</span>
<span class="highlight-comment">// the user and indicate the error result:</span>
<span class="highlight-comment">// </span>
<span class="highlight-keyword">if</span>( !sel.Elements.IsEmpty )
{
  ElementSetIterator iter = sel.Elements.ForwardIterator();
  iter.MoveNext();
  Element errElem = iter.Current <span class="highlight-keyword">as</span> Element;
  elements.Clear();
  elements.Insert( errElem );
  message = <span class="highlight-literal">"We pretend something is wrong with this element and pass back this message to user"</span>;
  <span class="highlight-keyword">return</span> Result.Failed;
}
<span class="highlight-keyword">else</span>
{
  <span class="highlight-comment">// </span>
  <span class="highlight-comment">// we return failed here as well, actually.</span>
  <span class="highlight-comment">// as long as the message string and element set are empty,</span>
  <span class="highlight-comment">// it makes no difference to the user.</span>
  <span class="highlight-comment">// it also aborts the automatic transaction, avoiding marking</span>
  <span class="highlight-comment">// the database as dirty.</span>
  <span class="highlight-comment">// </span>
  <span class="highlight-keyword">return</span> Result.Failed;
}</pre></div></span><span id="cbc_6" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>VB.NET</div><div class="code"><pre><span class="highlight-comment">'</span>
<span class="highlight-comment">' we pretend that something is wrong with the first element in the selection.</span>
<span class="highlight-comment">' pass a message back to the Revit user and indicate the error result:</span>
<span class="highlight-comment">'</span>
<span class="highlight-keyword">If</span> <span class="highlight-keyword">Not</span> sel.Elements.IsEmpty <span class="highlight-keyword">Then</span>
    <span class="highlight-keyword">Dim</span> iter <span class="highlight-keyword">As</span> ElementSetIterator = sel.Elements.ForwardIterator
    iter.MoveNext()
    <span class="highlight-keyword">Dim</span> errElem <span class="highlight-keyword">As</span> Element = iter.Current
    elements.Clear()
    elements.Insert(errElem)
    message = <span class="highlight-literal">"We pretend something is wrong with this"</span> _
        + <span class="highlight-literal">" element and pass back this message to user"</span>
    <span class="highlight-keyword">Return</span> Result.Failed
<span class="highlight-keyword">Else</span>
    <span class="highlight-comment">'</span>
    <span class="highlight-comment">' we return failed here as well, actually.</span>
    <span class="highlight-comment">' as long as the message string and element set are empty,</span>
    <span class="highlight-comment">' it makes no difference to the user.</span>
    <span class="highlight-comment">' it also aborts the automatic transaction, avoiding marking</span>
    <span class="highlight-comment">' the database as dirty.</span>
    <span class="highlight-comment">'</span>
    <span class="highlight-keyword">Return</span> Result.Failed
<span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span></pre></div></span><p>
      Build the project and adjust the add-in manifest file to include
      the new command, e.g. by adding the following entries in addition to
      the existing ones from the Hello World walkthrough:
    </p><span><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>XML</div><div class="code"><pre><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">AddIn</span> <span class="highlight-xml-attribute-name">Type</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Command"</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Text</span><span class="highlight-xml-bracket">&gt;</span>Lab1_2_CommandArguments<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Text</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Description</span><span class="highlight-xml-bracket">&gt;</span>Demonstrate contents and usage of the Execute() method's command data input argument and the meaning of the result return code and the message and element set return arguments.<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Description</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Assembly</span><span class="highlight-xml-bracket">&gt;</span>C:\a\j\adn\train\revit\2011\src\rac\labs\cs\bin\Debug\labs.dll<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Assembly</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">FullClassName</span><span class="highlight-xml-bracket">&gt;</span>Labs.Lab1_2_CommandArguments<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">FullClassName</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">ClientId</span><span class="highlight-xml-bracket">&gt;</span>e96140eb-43fe-4e69-9eba-9252ceb55624<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">ClientId</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">AddIn</span><span class="highlight-xml-bracket">&gt;</span></pre></div></span><p>
      Now start up Revit, pre-select some elements and run the
      new Lab 1-2 command. It will display the app, doc and view data, then
      the currently selected elements, and finally an error reported on the
      first one of the elements in this set.
    </p></div><p />
    <b>Namespace:</b> 
   <a href="715b3539-b2e6-3295-58e6-1481eea1cf44.htm">Labs</a><br />
    <b>Assembly:</b>
   <span sdata="assembly">labs</span> (in labs.dll) Version: 3.0.0.1 (3.0.0.1)<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">Lab1_2_CommandArguments</span> : <span class="nolink">IExternalCommand</span></pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic (Declaration)</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">Lab1_2_CommandArguments</span> _
	<span class="keyword">Implements</span> <span class="nolink">IExternalCommand</span></pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">Lab1_2_CommandArguments</span> : <span class="nolink">IExternalCommand</span></pre></td></tr></table></span></div></div><h1 class="heading"><span onclick="ExpandCollapse(familyToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(familyToggle, event)" tabindex="0"><img id="familyToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Inheritance Hierarchy</span></h1><div id="familySection" class="section" name="collapseableSection" style=""><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>Object</a><br />  <span class="selflink">Labs<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>Lab1_2_CommandArguments</span><br /></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="2e57467a-af71-1c93-0159-4dfd69a30ce1.htm">Lab1_2_CommandArguments Members</a></div><div class="seeAlsoStyle"><a href="715b3539-b2e6-3295-58e6-1481eea1cf44.htm">Labs Namespace</a></div></div></div><div id="footer"><div class="footerLine"><img width="100%" height="3px" src="../icons/footer.gif" title="Footer image" /></div><A NAME="feedback"></A><span id="fb" class="feedbackcss"> </span>
 <p /><a href="Copyright (C) 2010 Jeremy Tammik, Autodesk Inc." target="_blank">Copyright (C) 2010 Jeremy Tammik, Autodesk Inc.</a></div></div></body></html>